service: slack-standup
frameworkVersion: '3'
provider:
  lambdaHashingVersion: "20201221"
  name: aws
  runtime: nodejs14.x
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    stage: ${self:provider.stage}
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  memorySize: 256
  logRetentionInDays: 5
resources:
  Resources:
    StatusDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
          - AttributeName: "userId"
            AttributeType: "S"
          - AttributeName: "messageId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
          - AttributeName: "userId"
            KeyType: "RANGE"
        GlobalSecondaryIndexes:
          - IndexName: "messageId-index"
            KeySchema:
              - AttributeName: "messageId"
                KeyType: "HASH"
            Projection:
              ProjectionType: "ALL"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.stage}_STANDUP_STATUS
        TimeToLiveSpecification:
          AttributeName: timeToLive
          Enabled: true
functions:
  slack:
    handler: src/app.handler
    events:
      - http:
          path: slack/events
          method: post
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "secretsmanager:GetSecretValue"
        Resource:
          Fn::Join:
            - ':'
            - - 'arn:aws:secretsmanager'
              - ${self:provider.region}
              - Ref: 'AWS::AccountId'
              - 'secret'
              - 'SlackStandup-secret-*'
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource:
          Fn::Join:
            - ':'
            - - 'arn:aws:dynamodb'
              - ${self:provider.region}
              - Ref: 'AWS::AccountId'
              - 'table/*_STANDUP_STATUS'
plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-offline
package:
  excludeDevDependencies: true
#  individually: true

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
#      forceExclude:
#        - aws-sdk
    excludeFiles:
      - src/**/*.test.js
      - src/test/scripts/*.ts
